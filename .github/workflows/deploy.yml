name: Deploy
on:
  workflow_run:
    workflows: ['Lint Test Build']
    branches: [main, master, ci-beta, qa-beta, stage-beta, prod-stable, ci-stable, qa-stable, stage-stable, prod-stable]
    types:
      - completed
jobs:
  deploy:
    # only run after the build workflow completes
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      # checkout the repository
      - uses: actions/checkout@v2
      # restore the build files from cache
      - uses: actions/cache@v2
        id: restore-build
        with:
          path: ${{ github.workspace }}/dist/*
          key: ${{ github.sha }}
      # if pushing from 'main' or 'master' set the DEPLOY_BRANCH to 'ci-beta'
      # otherwise set the DEPLOY_BRANCH to the current branch
      - name: Set env variables
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" || "${GITHUB_REF##*/}" == "master" ]]
          then
              echo "DEPLOY_BRANCH=ci-beta" >> $GITHUB_ENV
          else
              echo "DEPLOY_BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
          fi
          echo "GIT_USERNAME=Github Actions" >> $GITHUB_ENV
          echo "GIT_EMAIL=actions@github.com" >> $GITHUB_ENV
          echo "DEPLOY_URL=github.com/RedHatInsights/acs-ui-build" >> $GITHUB_ENV
      - name: Checkout RedHatInsights/acs-ui-build repo and push build files from acs-ui
        run: |
          git clone https://.:${{ secrets.TOKEN }}@${{ env.DEPLOY_URL }} build
          cd build
          if [ "${{ env.DEPLOY_BRANCH }}" != "ci-beta" ]
          then
              git checkout ${{ env.DEPLOY_BRANCH }} || git checkout -b ${{ env.DEPLOY_BRANCH }}
          fi
          rm -rvf * 
          cd ..
          cp -R ${{ github.workspace }}/dist/* ./build/
          cd build
          git config --local user.name "${{ env.GIT_USERNAME }}"
          git config --local user.email "${{ env.GIT_EMAIL }}"
          git add --all
          git commit -m "Automatically pushed build files from the ${GITHUB_REF##*/} branch of RedHatInsights/acs-ui"
          git push --force --quiet "https://${{ env.GIT_USERNAME }}:${{ secrets.API_TOKEN_GITHUB }}@${{ env.DEPLOY_URL }}" ${{ env.DEPLOY_BRANCH }}:${{ env.DEPLOY_BRANCH }}